


1 Amazon ec2 instance creation

       Installing Apache Tomcat

STEP1 :  
   
   Download tomcat packages from https://tomcat.apache.org/download-80.cgi onto /opt on EC2 instance

  # create tomcat directory
  #cd /opt
  #wget http://mirrors.fibergrid.in/apache/tomcat/tomcat-8/v8.5.35/bin/apache-tomcat-9.0.17.tar.gz
  #tar -xvzf /opt/apache-tomcat-9.0.17.tar.gz




STEP2 : 

===> give executing permissions to startup.sh and shutdown.sh which are under bin.

    #chmod +x /opt/apache-tomcat-9.0.17/bin/startup.sh shutdown.sh 
     or
    #cd /opt/apache-tomcat-8/bin/
    #chmod +x startup.sh shutdown.sh
===> creating soft link files for tomcat startup.sh and shutdown.sh

 # ln -s /opt/apache-tomcat-9.0.17/bin/startup.sh /usr/local/bin/tomcatup
 # ln -s /opt/apache-tomcat-9.0.17/bin/shutdown.sh /usr/local/bin/tomcatdown
 # tomcatup

==> check point :
access tomcat application from browser on prot 8080
http://<Public_IP>:8080



STEP3:

==> Using unique ports for each application is a best practice in an environment. But tomcat and Jenkins runs on ports number 8080. Hence lets change tomcat port number to 8090. Change port number in conf/server.xml file under tomcat home
cd /opt/apache-tomcat-9.0.17/conf
# update port number in the "connecter port" field in server.xml
# restart tomcat after configuration update
tomcatdown
tomcatup
check point :
access tomcat application from browser on port 8090
http://<Public_IP>:8090
==> now application is accessible on port 8090.


STEP4:

  Click on manger tab ===>but tomcat application does not allow to login from browser. changing a default parameter in context.xml does address this issue
  ==>search for context.xml

  ==> find / -name context.xml
 above command gives 3 context.xml files. comment () Value ClassName field on files which are under webapp directory. After that restart tomcat services to effect these changes
  
===>
1.  #vim /opt/apache-tomcat-9.0.17/webapps/host-manager/META-INF/context.xml
  add this command like <--! Value ClassName
  down line end add this command like  -->
 :wq --------save the file

2.  #vim /opt/apache-tomcat-9.0.17/webapps/manager/META-INF/context.xml
    add this command like <--! Value ClassName
  down line end add this command like  -->
 :wq --------save the file

 #tomcatdown
 #tomcatup

===> Update users information in the tomcat-users.xml file goto tomcat home directory and Add below users to conf/tomcat-user.xml file

	<role rolename="manager-gui"/>
	<role rolename="manager-script"/>
	<role rolename="manager-jmx"/>
	<role rolename="manager-status"/>
	<user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
	<user username="deployer" password="deployer" roles="manager-script"/>
	<user username="tomcat" password="s3cret" roles="manager-gui"/>
Restart serivce and try to login to tomcat application from the browser. This time it should be Successful 

====>
Tomcat is runnig or not checking for

#ps -ef |grep tomcat



step5
====> tomcat pulgin installing in Jenkins

      Goto --> Manage Jenkins --> search  pulgin for   " deployer to container "

====> tomcat credentials  configuring in Jenkins
	  
	  Goto--> Manage Jenkins --> credentials --> system --> global credentials 
	  
	  click on --> add credentials
	  
	  kind  : user-name with password
	  
	  scope : global(Jenkins,nodes.items, all child items ,etc)
	  
	  user-name  : deployer
	  
 	  password  : deployer
	  
	  ID       : tomcat_credentials
	  
	  Description :tomcat_credentials
	  
	  click on ok
	  
	  
===>Jenkins job post bill action configuring

 choose Deployer war to a container
	  
	  WAR/EAR files **/*.war
	  Context path
	  
	  Containers   : Tomcat 9
	                 
					 Credentials : choose deployer 
					 Tomcat Url  : http://18.212.124.8:8090
					 
					 
					 save
				
	  
	  
	  
	  
	  
	  deployment types
	  
	  1 GUI
	  
	    server side deployment